<?php

include_once 'settings.php';

// Instances the class
$telegram = new Telegram(TG_TOKEN);

// Take text and chat_id from the message
$text = $telegram->Text();
$chat_id = $telegram->ChatID();
$result = $telegram->getData();
$callbackQuery = $telegram->Callback_Query();
$callbackData = $telegram->Callback_Data();
$messageId = $telegram->Callback_Message()['message_id'];
$firstName = $telegram->FirstName();
$ReplyToMessageID = $telegram->ReplyToMessageID();
$callbackId = $telegram->Callback_ChatID();
$userId = $telegram->UserID();

$durationNum = null;
$stateName = null;
$ageFormated = null;
$currencyName = null;
$timestamp = time('Y-m-d');
$filename = "data/{$userId}_" . gmdate("G-j-n-Y", time()) . ".json";

function saveUserData($chat_id, $key, $value) {
    global $userId;

    $dir = 'data/';
    $files = scandir($dir);

    foreach ($files as $filename) {
        if (strpos($filename, $userId . '_') === 0) {
            $file_path = $dir . $filename;
            $jsonData = file_get_contents($file_path);
            $userData = json_decode($jsonData, true);

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (!isset($userData[$chat_id])) {
                $userData[$chat_id] = [];
            }
            $userData[$chat_id][$key] = $value;

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
            $jsonData = json_encode($userData);
            file_put_contents($file_path, $jsonData);

            return;
        }
    }

    // –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    $filename = "data/{$userId}_" . gmdate("G-j-n-Y") . ".json";
    $userData = [$chat_id => [$key => $value]];
    $jsonData = json_encode($userData);
    file_put_contents($filename, $jsonData);
}

if ((!$telegram->messageFromGroup())
    && !is_null($text)
    && !is_null($chat_id)
    && ($text === CALCULATION_PROG . " " . SEP)) {
    $reply = "–ù–µ –ø–æ–≥–∞–Ω–æ)

<b>" .SEP . "</b> —Ü–µ –≤–∏–≥—ñ–¥–Ω—ñ —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó –æ–ø—Ç–∏–º–∞–ª—å–Ω–∏–º —à–ª—è—Ö–æ–º!

–î–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É <b>" .SEP . "</b> –º–µ–Ω—ñ –∑–Ω–∞–¥–æ–±–ª—è—Ç—å—Å—è –¥–µ—è–∫—ñ –¥–∞–Ω—ñ –ø—Ä–æ –í–∞—Å.";

    // Create option for the custom keyboard. Array of array string
    $option = [
        [CALCULATION_PROG . " " . SEP],
        [CONSULTATION],
    ];
    // Get the keyboard
    $keyb = $telegram->buildKeyBoard($option, true, true, false);
    $content = [
        'chat_id' => $chat_id,
        'reply_markup' => $keyb,
        'text' => $reply,
        'parse_mode' => "html",
    ];
    $telegram->sendMessage($content);
    $messageId = $telegram->MessageID();

    // Continue Yes.
    $reply = 'üëá';
    $content = [
        'chat_id' => $chat_id,
        'reply_markup' => json_encode([
            'inline_keyboard' => [
                [
                    [
                        'text' => "–ü—Ä–æ–¥–æ–≤–∂–∏–º–æ, " . $firstName . "?",
                        'callback_data' => 'continue_sep',
                    ],
                ],
                [
                    [
                        'text' => "–î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é",
                        'callback_data' => 'back_menu',
                    ],
                ],
            ],
            'is_persistent' => false,
            'one_time_keyboard' => false,
            'resize_keyboard' => false,
        ]),
        'text' => $reply,
        'parse_mode' => "html",
    ];
    $telegram->sendMessage($content);
    $messageId = $telegram->MessageID();
}

if (!empty($callbackData)) {
//    $chat_id = $telegram->Callback_ChatID(); // –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É

    if ($callbackData === 'continue_sep') {
        $content = [
            'chat_id' => $chat_id,
            'text' => '–£–∫–∞–∂i—Ç—å —Å—Ç–∞—Ç—å',
            'parse_mode' => "html",
            'reply_markup' => json_encode([
                'inline_keyboard' => [
                    [
                        [
                            'text' => '–ñi–Ω–æ—á–∞',
                            'callback_data' => 'woman',
                        ],
                        [
                            'text' => '–ß–æ–ª–æ–≤i—á–∞',
                            'callback_data' => 'man',
                        ],
                    ]
                ],
                'is_persistent' => true,
                'one_time_keyboard' => false,
                'resize_keyboard' => true,
            ]),
        ];
        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();
    }

    $state = $callbackData;
    if ($state === 'woman') {
        $stateName = '–ñi–Ω–æ—á–∞';
    } elseif ($state === 'man') {
        $stateName = '–ß–æ–ª–æ–≤i—á–∞';
    }

    if ($state === 'woman' || $state === 'man') {
        $content = [
            'chat_id' => $chat_id,
            'text' => '–í–∞—à–∞ —Å—Ç–∞—Ç—å - <b>' . $stateName . '</b>.',
            'parse_mode' => "html",
            'reply_to_message_id' => $messageId,
        ];
        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();
        saveUserData($chat_id, 'stateName', $stateName);

        $option = [
            [
                $telegram->buildInlineKeyBoardButton(
                    '–î–æ–±—Ä–µ, –ø—Ä–æ–¥–æ–≤–∂–∏–º–æ?',
                    $url = '',
                    $callback_data = 'age'
                ),
            ],
        ];

        $keyb = $telegram->buildInlineKeyBoard($option);

        $content = [
            'chat_id' => $chat_id,
            'text' => 'üëá',
            'parse_mode' => "html",
            'reply_markup' => $keyb,
        ];
        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();
    }

    if ($callbackData === 'age') {
        $content = [
            'chat_id' => $chat_id,
            'text' => 'üëá –î–∞–ªi –≤–≤–µ–¥—ñ—Ç—å –≤—ñ–∫ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è. üëá
<i>* –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ –¥–ª—è —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è ‚Äì 15 —Ä–æ–∫—ñ–≤.
* –ú–∞–∫—Åi–º–∞–ª—å–Ω–∏–π –≤—ñ–∫ –¥–ª—è —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è ‚Äì 60 —Ä–æ–∫—ñ–≤.</i>',
            'parse_mode' => "html",
            'reply_markup' => $telegram->buildForceReply(),
        ];

        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();
    }
}

/* ================================================== */

if (!$telegram->messageFromGroup()) {
    $age = $text;
    if ($ReplyToMessageID) {
        // Response to age request.


        $ageFormated =& $age;
        unset($age);
        $ageFormated = number_format($ageFormated);
        if ($ageFormated >= 15 && $ageFormated <= 60) {
            $content = [
                'chat_id' => $chat_id,
                'text' => '–í–∞—à –≤i–∫, –ø–æ–≤–Ω–∏—Ö —Ä–æ–∫i–≤ - <b>' . $ageFormated . '</b>.',
                'parse_mode' => "html",
                'reply_to_message_id' => $messageId,
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();
            saveUserData($chat_id, 'ageFormated', $ageFormated);

            $content = [
                'chat_id' => $chat_id,
                'text' => 'üëá',
                'parse_mode' => "html",
//                'reply_to_message_id' => $messageId,
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();

            $content = [
                'chat_id' => $chat_id,
                'text' => 'üëá –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ üëá',
                'parse_mode' => "html",
                'reply_markup' => json_encode([
                    'inline_keyboard' => [
                        [
                            ['text' => '5', 'callback_data' => 'duration_5'],
                            ['text' => '10', 'callback_data' => 'duration_10'],
                            ['text' => '15', 'callback_data' => 'duration_15'],
                            ['text' => '20', 'callback_data' => 'duration_20'],
                            ['text' => '25', 'callback_data' => 'duration_25'],
                            ['text' => '30', 'callback_data' => 'duration_30'],
                        ],
                    ],
                    'is_persistent' => true,
                    'one_time_keyboard' => false,
                    'resize_keyboard' => true,
                ]),
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();

        } else {
            $content = [
                'chat_id' => $chat_id,
                'text' => '–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø–æ–≤–Ω–µ —á–∏—Å–ª–æ –≤—ñ–¥ 15 –¥–æ 60',
                'parse_mode' => "html",
                'reply_to_message_id' => $messageId,
                'reply_markup' => $telegram->buildForceReply(),
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();
        }

    }
}

if (!empty($callbackData)) {
    $duration = $callbackData;

    $chat_id = $telegram->Callback_ChatID();

    if (!empty($callbackData)) {
        $chat_id = $telegram->Callback_ChatID();

        if (strpos($callbackData, 'duration_') === 0) {
            $durationNum = substr($callbackData, 9);

            $content = [
                'chat_id' => $chat_id,
                'text' => '–í–∞—à —Ç–µ—Ä–º—ñ–Ω —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è <b>' . $durationNum . '</b> —Ä–æ–∫i–≤.',
                'parse_mode' => "html",
                'reply_to_message_id' => $messageId,
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();
            saveUserData($chat_id, 'durationNum', $durationNum);
        }
    }

    if (substr($duration, 0, 8) === 'duration') {
        $content = [
            'chat_id' => $chat_id,
            'text' => 'üëá',
            'parse_mode' => "html",
        ];
        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();

        $content = [
            'chat_id' => $chat_id,
            'text' => 'üëá –û–±–µ—Äi—Ç—å –≤–∞–ª—é—Ç—É —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ üëá',
            'parse_mode' => "html",
            'reply_markup' => json_encode([
                'inline_keyboard' => [
                    [
                        ['text' => '–ì—Ä–∏–≤–Ω—è', 'callback_data' => 'cur_hrivnya'],
                        ['text' => '–î–æ–ª–ª–∞—Ä –°–®–ê', 'callback_data' => 'cur_dollar'],
                    ],
                ],
                'is_persistent' => true,
                'one_time_keyboard' => false,
                'resize_keyboard' => true,
            ]),
        ];
        $telegram->sendMessage($content);
        $messageId = $telegram->MessageID();
    }

    if (!empty($callbackData)) {
        $chat_id = $telegram->Callback_ChatID();

        if (strpos($callbackData, 'cur_') === 0) {
            if ($callbackData === 'cur_hrivnya') {
                $currencyName = '–ì—Ä–∏–≤–Ω—è';
            } else {
                $currencyName = '–î–æ–ª–ª–∞—Ä –°–®–ê';
            }

            $content = [
                'chat_id' => $chat_id,
                'text' => '–í–∞–ª—é—Ç–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ <b>' . $currencyName . '</b>',
                'parse_mode' => "html",
                'reply_to_message_id' => $messageId,
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();
            saveUserData($chat_id, 'currencyName', $currencyName);

            $content = [
                'chat_id' => $chat_id,
                'text' => 'üëá',
                'parse_mode' => "html",
            ];
            $telegram->sendMessage($content);
            $messageId = $telegram->MessageID();

        }
    }
}

/* ================================================== */

$userId = $telegram->UserID();
$jsonData = file_get_contents($filename);

$dataArray = json_decode($jsonData, true);

$stateNameJson = $dataArray[$userId]['stateName'];
$ageFormatedJson = $dataArray[$userId]['ageFormated'];
$durationNumJson = $dataArray[$userId]['durationNum'];
$currencyNameJson = $dataArray[$userId]['currencyName'];


//file_put_contents(
//    'log.txt',
//    '–¢–µ—Ä–ºi–Ω: ' . $dataArray . PHP_EOL,
//    FILE_APPEND
//);
$fromCallbackQuery = false;

if (
    isset($stateNameJson) &&
    isset($ageFormatedJson) &&
    isset($durationNumJson) &&
    isset($currencyNameJson) &&
    ($callbackData === 'cur_dollar' || $callbackData === 'cur_hrivnya')
) {
    $content = [
        'chat_id' => $chat_id,
        'text' => '–í–∏ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ωi:
–í–∞—à–∞ —Å—Ç–∞—Ç—å - <b>' . $stateNameJson . '</b>.
–í–∞—à –≤i–∫, –ø–æ–≤–Ω–∏—Ö —Ä–æ–∫i–≤ - <b>' . $ageFormatedJson . '</b>.
–í–∞—à —Ç–µ—Ä–º—ñ–Ω —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è, —Ä–æ–∫i–≤ <b>' . $durationNumJson . '</b>.
–í–∞–ª—é—Ç–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ <b>' . $currencyNameJson . '</b>.',
        'parse_mode' => "html",
    ];
    $telegram->sendMessage($content);
    $messageId = $telegram->MessageID();

    $content = [
        'chat_id' => $chat_id,
        'reply_markup' => json_encode([
            'inline_keyboard' => [
                [
                    [
                        'text' => '–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏',
                        'callback_data' => 'calculation'
                    ],
                ],
                [
                    [
                        'text' => '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É',
                        'callback_data' => 'back_calculation'
                    ],
                ],
                [
                    [
                        'text' => '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',
                        'callback_data' => 'back_menu'
                    ],
                ],
            ],
            'is_persistent' => false,
            'one_time_keyboard' => false,
            'resize_keyboard' => false,
        ]),
        'text' => 'üëá –í—Å–µ –≤i—Ä–Ω–æ, ' . $firstName . ', —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏? üëá',
        'parse_mode' => "html",
    ];
    $telegram->sendMessage($content);
    $messageId = $telegram->MessageID();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ CallbackQuery
$update = json_decode(file_get_contents("php://input"), true);
if (isset($update["callback_query"])) {
    $fromCallbackQuery = true;
    $callbackQuery = $update["callback_query"];
    $callbackData = $callbackQuery["data"];
    $callbackChatId = $callbackQuery["message"]["chat"]["id"];

    if ($callbackData === 'calculation') {
        // –†–∞—Å—á–µ—Ç —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏
        $content = [
            'chat_id' => $callbackChatId,
            'text' => '–î–µ–ª–∞—é —Ä–∞—Å—á–µ—Ç',
        ];
        $telegram->sendMessage($content);

    } elseif (($callbackData === 'back_calculation') || ($callbackData === 'back_menu')) {

        // Delete JSON file.
        $files = glob('data/' . $userId . '*.json'); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ
        foreach ($files as $file) {
            unlink($file);
        }
        // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç $callbackData –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —à–∞–≥
    }

    // CallbackQuery response.
    $telegram->answerCallbackQuery([
        'callback_query_id' => $callbackQuery['id'],
        'text' => '',
        'show_alert' => false,
    ]);
}
